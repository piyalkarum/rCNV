// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// process_snp
Rcpp::CharacterVector process_snp(Rcpp::CharacterVector X, bool AD);
RcppExport SEXP _rCNV_process_snp(SEXP XSEXP, SEXP ADSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type X(XSEXP);
    Rcpp::traits::input_parameter< bool >::type AD(ADSEXP);
    rcpp_result_gen = Rcpp::wrap(process_snp(X, AD));
    return rcpp_result_gen;
END_RCPP
}
// process_column1
CharacterVector process_column1(CharacterVector column, std::string info_type, int max_adn, IntegerVector ind_adn);
RcppExport SEXP _rCNV_process_column1(SEXP columnSEXP, SEXP info_typeSEXP, SEXP max_adnSEXP, SEXP ind_adnSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type column(columnSEXP);
    Rcpp::traits::input_parameter< std::string >::type info_type(info_typeSEXP);
    Rcpp::traits::input_parameter< int >::type max_adn(max_adnSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind_adn(ind_adnSEXP);
    rcpp_result_gen = Rcpp::wrap(process_column1(column, info_type, max_adn, ind_adn));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rCNV_process_snp", (DL_FUNC) &_rCNV_process_snp, 2},
    {"_rCNV_process_column1", (DL_FUNC) &_rCNV_process_column1, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_rCNV(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
